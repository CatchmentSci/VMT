% --- Advanced Settings Sub-GUI
function [handles] = AdvancedSettings_subgui(guiparams)

% Store guiparams in local memory
handles.guiparams = guiparams;

% Build the GUI
% -------------
the_color = get(0,'factoryUipanelBackgroundColor');
handles.f = figure('units','pixels',...
    'name','Advanced Settings',...
    'WindowStyle', 'normal',... %modal
    'NumberTitle','off',...
    'menubar','none',...
    'Color',the_color,...
    'position',[750 510 542 420]); % Create a new GUI.

handles.OffsetsPanel = uipanel('Parent',handles.f, ...
    'Title', 'Offsets', ...
    'Units','pixels', ...
    'FontWeight','bold',...
    'Position',[13 283 250 107]);
handles.WaterSurfaceElevation = uicontrol('Style','edit', ...
    'Parent',handles.OffsetsPanel, ...
    'String',guiparams.water_surface_elevation, ...
    'Units','pixels', ...
    'Position',[161 68.28 49 21.77],...
    'Callback',{@WaterSurfaceElevation_Callback,handles});
uicontrol('Style','text', ...
    'Parent',handles.OffsetsPanel, ...
    'String','Water Surface Elevation (m)', ...
    'HorizontalAlignment', 'right',...
    'Units','pixels', ...
    'Position',[10 71.25 142 13.85]);
handles.BedElevation = uicontrol('Style','edit', ...
    'Parent',handles.OffsetsPanel, ...
    'String',guiparams.bed_elevation, ...
    'Units','pixels', ...
    'Position',[161 41.57 49 21.77],...
    'Callback',{@BedElevation_Callback,handles});
uicontrol('Style','text', ...
    'Parent',handles.OffsetsPanel, ...
    'String','Bed Elevation Elevation (m)', ...
    'HorizontalAlignment', 'right',...
    'Units','pixels', ...
    'Position',[64 43.55 88 14.84]);
handles.KMZVerticalOffset = uicontrol('Style','edit', ...
    'Parent',handles.OffsetsPanel, ...
    'String',guiparams.KMZ_vertical_offset, ...
    'Units','pixels', ...
    'Position',[161 13.86 49 21.77],...
    'Callback',{@KMZVerticalOffset_Callback,handles});
uicontrol('Style','text', ...
    'Parent',handles.OffsetsPanel, ...
    'String','KMZ Vertical Offset (m)', ...
    'HorizontalAlignment', 'right',...
    'Units','pixels', ...
    'Position',[19 17.82 133 13.85]);

handles.VerticalReferenceButtonGroup = uibuttongroup('Parent',handles.f, ...
    'Title', 'Vertical Reference', ...
    'Units','pixels', ...
    'FontWeight','bold',...
    'SelectionChangedFcn',{@VRefBselection,handles},...
    'Position',[13 165 250 107]);
r1 = uicontrol('Parent',handles.VerticalReferenceButtonGroup,...
    'Style',...
    'radiobutton',...
    'Units','pixels', ...
    'String','Depth From Surface',...
    'Tag','dfs',...  % used to pass value to guiparams
    'Position',[21 57 124 23],...
    'HandleVisibility','off');
r2 = uicontrol('Parent',handles.VerticalReferenceButtonGroup,...
    'Style',...
    'radiobutton',...
    'Units','pixels', ...
    'String','Height Above Bottom',...
    'Tag','hab',...  % used to pass value to guiparams
    'Position',[21 23 129 23],...
    'HandleVisibility','off');
% Init selection based on guiparams
switch guiparams.plotref
    case 'dfs'
        set(handles.VerticalReferenceButtonGroup,'SelectedObject',r1);
    case 'hab'
        set(handles.VerticalReferenceButtonGroup,'SelectedObject',r2);
    otherwise
        set(handles.VerticalReferenceButtonGroup,'SelectedObject',r1);
end
        
handles.CrossSectionOrientationButtonGroup = uibuttongroup('Parent',handles.f, ...
    'Title', 'Cross Section Orientation', ...
    'Units','pixels', ...
    'FontWeight','bold',...
    'Position',[13 41 250 107]);
c1 = uicontrol('Parent',handles.CrossSectionOrientationButtonGroup,...
    'Style',...
    'checkbox',...
    'Units','pixels', ...
    'String','Automatically determine Mean Cross',...
    'Position',[11 69 225 23],...
    'Value',guiparams.allow_vmt_flip_flux);
t1 = uicontrol('Parent',handles.CrossSectionOrientationButtonGroup,...
    'Style',...
    'text',...
    'Units','pixels', ...
    'String','Section orientation?',...
    'HorizontalAlignment','left',...
    'Position',[28 58 99 14]);
r3 = uicontrol('Parent',handles.CrossSectionOrientationButtonGroup,...
    'Style',...
    'radiobutton',...
    'Units','pixels', ...
    'Enable','off',...
    'String','Left',...
    'Position',[106 30 48 23],...
    'HandleVisibility','off');
r4 = uicontrol('Parent',handles.CrossSectionOrientationButtonGroup,...
    'Style',...
    'radiobutton',...
    'Units','pixels', ...
    'Enable','off',...
    'String','Right',...
    'Position',[164 30 51 23],...
    'HandleVisibility','off');
t1 = uicontrol('Parent',handles.CrossSectionOrientationButtonGroup,...
    'Style',...
    'text',...
    'Units','pixels', ...
    'Enable','off',...
    'String','Start bank:',...
    'HorizontalAlignment','left',...
    'Position',[37 34 54 14]);

handles.ReservedPanel = uipanel('Parent',handles.f, ...
    'Title', 'Reserved', ...
    'Visible', 'Off',...
    'Units','pixels', ...
    'FontWeight','bold',...
    'Position',[279 41 250 350]);
guidata(handles.f,handles); 

% Store any changes to guiparams in local memory so VMT can see them
handles.guiparams = guiparams;

%%%%%%%%%%%%%
% CallBacks %
%%%%%%%%%%%%%
function WaterSurfaceElevation_Callback(hObject, eventdata, handles)

% Get the new entry and make sure it is valid (numeric, positive):
% ----------------------------------------------------------------
new_num = str2double(get(hObject,'String'));
is_a_number = ~isnan(new_num);
is_positive = new_num>=0;

% Modify the Application data:
% ----------------------------
if is_a_number && is_positive
    handles.guiparams.water_surface_elevation = new_num;
else % Reject the (incorrect) input
    set(hObject,'String',handles.guiparams.water_surface_elevation)
end
function BedElevation_Callback(hObject, eventdata, handles)

% Get the new entry and make sure it is valid (numeric, positive):
% ----------------------------------------------------------------
new_num = str2double(get(hObject,'String'));
is_a_number = ~isnan(new_num);
is_positive = new_num>=0;

% Modify the Application data:
% ----------------------------
if is_a_number && is_positive
    handles.guiparams.bed_elevation = new_num;
else % Reject the (incorrect) input
    set(hObject,'String',handles.guiparams.bed_elevation)
end
function KMZVerticalOffset_Callback(hObject, eventdata, handles)

% Get the new entry and make sure it is valid (numeric, positive):
% ----------------------------------------------------------------
new_num = str2double(get(hObject,'String'));
is_a_number = ~isnan(new_num);
is_positive = new_num>=0;

% Modify the Application data:
% ----------------------------
if is_a_number && is_positive
    handles.guiparams.KMZ_vertical_offset = new_num;
else % Reject the (incorrect) input
    set(hObject,'String',handles.guiparams.KMZ_vertical_offset)
end

function VRefBselection(source,callbackdata,handles)
new_button_choice = callbackdata.NewValue.Tag;
old_button_choice = callbackdata.OldValue.Tag;
handles.guiparams.plotref = new_button_choice;






% [END OF ADVANCED SETTINGS GUI]